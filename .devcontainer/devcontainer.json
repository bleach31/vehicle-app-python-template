// This file is maintained by velocitas CLI, do not modify manually. Change settings in .velocitas.json
{
	"name": "Python vehicle app",
	"build": {
		"dockerfile": "Dockerfile"
	},
	"runArgs": [
		"--init",
		"--privileged"
	],
	"containerEnv": {
		"GITHUB_API_TOKEN": "${localEnv:GITHUB_API_TOKEN}",
		"GIT_CONFIG_NAME": "${localEnv:GIT_CONFIG_NAME}",
		"GIT_CONFIG_EMAIL": "${localEnv:GIT_CONFIG_EMAIL}"
	},
	"customizations": {
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/usr/bin/python3",
				"python.analysis.typeCheckingMode": "basic",
				// Strong Type Checker
				"mypy.enabled": true,
				"mypy.runUsingActiveInterpreter": true,
				"mypy.targets": [
					"app"
				],
				// Security Linter
				"python.linting.banditEnabled": true,
				"python.linting.banditArgs": [
					"-c setup.cfg"
				],
				// Style Checker for Python Docs
				"python.linting.pydocstyleEnabled": true,
				"python.analysis.extraPaths": [
					"./proto",
					"./src/vehicle_model"
				],
				"python.testing.unittestEnabled": false,
				"python.testing.pytestEnabled": true,
				"[python]": {
					// Style Formatter
					"editor.defaultFormatter": "ms-python.black-formatter"
				},
				"vs-kubernetes": {
					"vscode-kubernetes.kubectl-path.linux": "/usr/local/bin/kubectl",
					"vscode-kubernetes.helm-path.linux": "/usr/local/bin/helm"
				},
				"terminal.integrated.defaultProfile.linux": "zsh",
				"terminal.integrated.profiles.linux": {
					"zsh": {
						"path": "/usr/bin/zsh"
					}
				},
				"vsmqtt.brokerProfiles": [
					{
						"name": "mosquitto (local)",
						"host": "localhost",
						"port": 1883,
						"clientId": "vsmqtt_client"
					},
					{
						"name": "mosquitto (k3d)",
						"host": "localhost",
						"port": 31883,
						"clientId": "vsmqtt_client"
					},
					{
						"name": "mosquitto (kanto)",
						"host": "localhost",
						"port": 1883,
						"clientId": "vsmqtt_client"
					}
				]
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"lf-lang.vscode-lingua-franca",
				"dbaeumer.vscode-eslint",
				"ms-azuretools.vscode-dapr",
				"ms-azuretools.vscode-docker",
				"ms-python.python",
				"cschleiden.vscode-github-actions",
				"rpdswtk.vsmqtt",
				"dotjoshjohnson.xml",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"matangover.mypy",
				"augustocdias.tasks-shell-input",
				"ms-python.isort",
				"ms-python.flake8",
				"ms-python.black-formatter",
				"ms-python.mypy-type-checker"
			]
		}
	},
	"onCreateCommand": {
		"velocitas": "bash .devcontainer/scripts/onCreateCommand.sh",
		"LinguaFranca": "sudo mkdir -p /workspaces/.codespaces/.persistedshare/logs && sudo chmod -R 777 /workspaces/.codespaces/.persistedshare/logs"
	},
	"postStartCommand": {
		"velocitas": "bash .devcontainer/scripts/postStartCommand.sh",
		"setup-user-env": ["/bin/bash", "-c", "(bash -i ./.devcontainer/scripts/setup-user-env.bash >> /workspaces/.codespaces/.persistedshare/logs/stdout-env.log 2>> /workspaces/.codespaces/.persistedshare/logs/stderr-env.log) || (echo setup-user-env exited with nonzero code)"],
		"setup-lf": ["/bin/bash", "-c", "(bash ./.devcontainer/scripts/setup-lf.bash nightly >> /workspaces/.codespaces/.persistedshare/logs/stdout-lf.log 2>> /workspaces/.codespaces/.persistedshare/logs/stderr-lf.log) || (echo setup-lf exited with nonzero code)"]
	},
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"remoteEnv": {
        // Unsure if this is a good idea, as other people might fork this and change name
        "LF_PATH": "${containerWorkspaceFolder}/lingua-franca",
        // We must include SDKMAN here, because otherwise node which VSCode uses will disregard new java installed by SDKMAN, LF extension will get confused and use the old version.
        // Not portable. But what can you do?
        "PATH": "${containerWorkspaceFolder}/lingua-franca/bin:/home/vscode/.sdkman/candidates/java/current/bin:${containerEnv:PATH}"
    }
}
